swagger: "2.0"
info:
  version: 1.0.0
  title: Apartment App
  description: This is the back end server for Khoj the search application.
  contact:
    name: Jarifa Mustafa
    email: jarifamustafa.aapshari@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: localhost:3000
basePath: /api
schemes: 
  - http
consumes: 
  - application/json
produces: 
  - application/json
paths:
  /users:
    get:
      description: |
        Returns all users from the system if the user is authenticated and has admin privilege 
      operationId: getAllUser
      parameters:
        - name: pageSize
          in: query
          description: maximum number of results to return
          required: false
          type: integer
        - name: pageNumber
          in: query
          description: index of page, starts from 0 (zero)
          required: false
          type: integer
        - name: x-auth-token
          in: header
          description: access token provided by server after authorization
          required: true
          type: string
      responses:
        "200":
          description: list of user objects
    post:
      description: Creates a new user in the store. Duplicate email not allowed
      operationId: createUser
      parameters:
        - name: pet
          in: body
          description: Pet to add to the store
          required: true
          schema:
            type: string
      responses:
        "200":
          description: pet response
          schema:
            type: string
        default:
          description: unexpected error
          schema:
            type: string
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: pet response
          schema:
            type: string
        default:
          description: unexpected error
          schema:
            type: string
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: pet deleted
        default:
          description: unexpected error
          schema:
            type: string